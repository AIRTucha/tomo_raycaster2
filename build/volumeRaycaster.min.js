!function(namespace){namespace.VRC={}}(window),function(namespace){var EventDispatcher=function(O){var me={};return me["class"]=this,me._functions=[],me._context=window,me.add=function(func,is_start){return me._functions.push({is_start:void 0!=is_start?is_start:!0,func:func}),me._functions.length-1},me.remove=function(index){delete me._functions[index]},me.get=function(index){return me._functions[index]},me.stop=function(index){me._functions[index].is_start=!1},me.start=function(index){me._functions[index].is_start=!0},me.isStart=function(index){return me._functions[index].is_start},me.call=function(value,context){var context=context?context:me._context;for(i in me._functions){var task=me._functions[i];task.is_start&&task.func.call(context,value)}},me.isEmpty=function(){return 0==me._functions.length},me.setConfig=function(O){for(prop in O)switch(prop){case"context":this._context=O[prop]}},me.Constructor=function(O){this.setConfig(O)},me.Constructor(O),me};namespace.EventDispatcher=EventDispatcher}(window.VRC),function(namespace){var AdaptationManager=function(){var me={};return me._core={},me._possible_steps=[32,64,128,256,512,1024],me._current_steps_index=0,me._onPostDrawFuncIndex=-1,me._onCameraChangeStartFuncIndex=-1,me._onCameraChangeEndFuncIndex=-1,me.init=function(core){me._core=core,me._onPostDrawFuncIndex=me._core.onPostDraw.add(function(fps){me["do"](fps)}),me._onCameraChangeStartFuncIndex=me._core.onCameraChangeStart.add(function(){me.pause(!0)}),me._onCameraChangeEndFuncIndex=me._core.onCameraChangeEnd.add(function(){me.pause(!1)})},me.setPossibleSteps=function(possible_steps){me._possible_steps=possible_steps},me.run=function(flag){flag?(me._core.onPostDraw.Start(me._onPostDrawFuncIndex),me._core.onCameraChangeStart.Start(me._onCameraChangeEndFuncIndex),me._core.onCameraChangeEnd.Start(me._onCameraChangeStartFuncIndex)):(me._core.onPostDraw.stop(me._onPostDrawFuncIndex),me._core.onCameraChangeStart.stop(me._onCameraChangeEndFuncIndex),me._core.onCameraChangeEnd.stop(me._onCameraChangeStartFuncIndex))},me.pause=function(flag){flag?(me._core.onCameraChangeStart.stop(me._onCameraChangeEndFuncIndex),me._core.onPostDraw.stop(me._onPostDrawFuncIndex)):(me._core.onCameraChangeStart.Start(me._onCameraChangeEndFuncIndex),me._core.onPostDraw.Start(me._onPostDrawFuncIndex))},me.decreaseSteps=function(){me._current_steps_index--,me._core.setSteps(me.getSteps())},me.increaseSteps=function(){me._current_steps_index++,me._core.setSteps(me.getSteps())},me.getSteps=function(){return me._possible_steps[me._current_steps_index]},me.isRun=function(){var isRunOnPostDraw=me._core.onPostDraw.IsRun(me._onPostDrawFuncIndex),isRunOnCameraChangeStart=me._core.onCameraChangeStart.IsRun(me._onCameraChangeEndFuncIndex),isRunOnCameraChangeEnd=me._core.onCameraChangeEnd.IsRun(me._onCameraChangeStartFuncIndex);return isRunOnPostDraw&&isRunOnCameraChangeStart&&isRunOnCameraChangeEnd},me.isPause=function(){var isRunOnPostDraw=me._core.onPostDraw.IsRun(me._onPostDrawFuncIndex),isRunOnCameraChangeStart=me._core.onCameraChangeStart.IsRun(me._onCameraChangeEndFuncIndex),isRunOnCameraChangeEnd=me._core.onCameraChangeEnd.IsRun(me._onCameraChangeStartFuncIndex);return!isRunOnPostDraw&&!isRunOnCameraChangeStart&&isRunOnCameraChangeEnd},me["do"]=function(fps){15>fps&&me._current_steps_index>0?(console.log("FPS: "+fps+", Number of steps: "+me.getSteps()),me.decreaseSteps()):fps>40&&me._current_steps_index<me._possible_steps.length-1&&(console.log("FPS: "+fps+", Number of steps: "+me.getSteps()),me.increaseSteps())},me};namespace.AdaptationManager=AdaptationManager}(window.VRC),function(namespace){var GeometryHelper=function(){var me={};return me.createBoxGeometry=function(dimension){for(var vertexPos=[[dimension.xmin,dimension.ymin,dimension.zmax],[dimension.xmax,dimension.ymin,dimension.zmax],[dimension.xmax,dimension.ymax,dimension.zmax],[dimension.xmin,dimension.ymin,dimension.zmax],[dimension.xmax,dimension.ymax,dimension.zmax],[dimension.xmin,dimension.ymax,dimension.zmax],[dimension.xmin,dimension.ymin,dimension.zmin],[dimension.xmin,dimension.ymax,dimension.zmin],[dimension.xmax,dimension.ymax,dimension.zmin],[dimension.xmin,dimension.ymin,dimension.zmin],[dimension.xmax,dimension.ymax,dimension.zmin],[dimension.xmax,dimension.ymin,dimension.zmin],[dimension.xmin,dimension.ymax,dimension.zmin],[dimension.xmin,dimension.ymax,dimension.zmax],[dimension.xmax,dimension.ymax,dimension.zmax],[dimension.xmin,dimension.ymax,dimension.zmin],[dimension.xmax,dimension.ymax,dimension.zmax],[dimension.xmax,dimension.ymax,dimension.zmin],[dimension.xmin,dimension.ymin,dimension.zmin],[dimension.xmax,dimension.ymin,dimension.zmin],[dimension.xmax,dimension.ymin,dimension.zmax],[dimension.xmin,dimension.ymin,dimension.zmin],[dimension.xmax,dimension.ymin,dimension.zmax],[dimension.xmin,dimension.ymin,dimension.zmax],[dimension.xmax,dimension.ymin,dimension.zmin],[dimension.xmax,dimension.ymax,dimension.zmin],[dimension.xmax,dimension.ymax,dimension.zmax],[dimension.xmax,dimension.ymin,dimension.zmin],[dimension.xmax,dimension.ymax,dimension.zmax],[dimension.xmax,dimension.ymin,dimension.zmax],[dimension.xmin,dimension.ymin,dimension.zmin],[dimension.xmin,dimension.ymin,dimension.zmax],[dimension.xmin,dimension.ymax,dimension.zmax],[dimension.xmin,dimension.ymin,dimension.zmin],[dimension.xmin,dimension.ymax,dimension.zmax],[dimension.xmin,dimension.ymax,dimension.zmin]],positions=[],colors=[],i=0;i<vertexPos.length;i++){var backCounter=vertexPos.length-1-i,x=vertexPos[backCounter][0],y=vertexPos[backCounter][1],z=vertexPos[backCounter][2];positions.push(x),positions.push(y),positions.push(z),colors.push(x),colors.push(y),colors.push(z),colors.push(1)}var geometry=new THREE.BufferGeometry,bufferPositions=new Float32Array(positions);return geometry.addAttribute("position",new THREE.BufferAttribute(bufferPositions,3)),geometry.addAttribute("vertColor",new THREE.BufferAttribute(new Float32Array(colors),4)),geometry.computeBoundingSphere(),geometry},me};namespace.GeometryHelper=GeometryHelper}(window.VRC),function(namespace){var Shaders=function(O){var me={};return me["class"]=this,me.firtsPass_vs=["#ifdef GL_FRAGMENT_PRECISION_HIGH","precision highp int;","precision highp float;","#else","precision mediump int;","precision mediump float;","#endif","attribute vec4 vertColor;","varying vec4 backColor;","varying vec4 pos;","void main(void)","{","    backColor = vertColor;","    pos = projectionMatrix * modelViewMatrix * vec4(position, 1.0);","    gl_Position = pos;","}"].join("\n"),me.firtsPass_fs=["#ifdef GL_FRAGMENT_PRECISION_HIGH","    // highp is supported","    precision highp int;","    precision highp float;","#else","    // high is not supported","    precision mediump int;","    precision mediump float;","#endif","varying vec4 backColor;","void main(void)","{","    gl_FragColor = backColor;","}"].join("\n"),me.secondPass_vs=["#ifdef GL_FRAGMENT_PRECISION_HIGH","    // highp is supported","    precision highp int;","    precision highp float;","#else","    // high is not supported","    precision mediump int;","    precision mediump float;","#endif","attribute vec4 vertColor;","varying vec4 frontColor;","varying vec4 pos;","void main(void)","{","    frontColor = vertColor;","    pos = projectionMatrix * modelViewMatrix * vec4(position, 1.0);","    gl_Position = pos;","}"].join("\n"),me.secondPass_fs=["#ifdef GL_FRAGMENT_PRECISION_HIGH","    // highp is supported","    precision highp int;","    precision highp float;","#else","    // high is not supported","    precision mediump int;","    precision mediump float;","#endif","varying vec4 frontColor;","varying vec4 pos;","uniform sampler2D uBackCoord;","uniform sampler2D uSliceMaps[10];","uniform sampler2D uTransferFunction;","uniform float uNumberOfSlices;","uniform float uMinGrayVal;","uniform float uMaxGrayVal;","uniform float uOpacityVal;","uniform float uColorVal;","uniform float uAbsorptionModeIndex;","uniform float uSlicesOverX;","uniform float uSlicesOverY;","uniform float uSteps;","//Acts like a texture3D using Z slices and trilinear filtering.","float getVolumeValue(vec3 volpos)","{","    float s1Original, s2Original, s1, s2;","    float dx1, dy1;","    float dx2, dy2;","    float value;","    vec2 texpos1,texpos2;","    float slicesPerSprite = uSlicesOverX * uSlicesOverY;","    s1Original = floor(volpos.z*uNumberOfSlices);","    s2Original = min(s1Original+1.0, uNumberOfSlices);","    int tex1Index = int(floor(s1Original / slicesPerSprite));","    int tex2Index = int(floor(s2Original / slicesPerSprite));","    s1 = mod(s1Original, slicesPerSprite);","    s2 = mod(s2Original, slicesPerSprite);","    dx1 = fract(s1/uSlicesOverX);","    dy1 = floor(s1/uSlicesOverY)/uSlicesOverY;","    dx2 = fract(s2/uSlicesOverX);","    dy2 = floor(s2/uSlicesOverY)/uSlicesOverY;","    texpos1.x = dx1+(volpos.x/uSlicesOverX);","    texpos1.y = dy1+(volpos.y/uSlicesOverY);","    texpos2.x = dx2+(volpos.x/uSlicesOverX);","    texpos2.y = dy2+(volpos.y/uSlicesOverY);","    float value1, value2;","    bool value1Set = false, value2Set = false;","    for (int x = 0; x < 10; x++) {","        if(x == tex1Index) {","            value1 = texture2D(uSliceMaps[x],texpos1).x;","            value1Set = true;","        }","        if(x == tex2Index) {","            value2 = texture2D(uSliceMaps[x],texpos2).x;","            value2Set = true;","        }","        if(value1Set && value2Set) {","            break;","        }","    }","    return mix(value1, value2, fract(volpos.z*uNumberOfSlices));","}","void main(void)","{","    vec2 texC = ((pos.xy/pos.w) + 1.0) / 2.0;","    vec4 backColor = texture2D(uBackCoord,texC);","    vec3 dir = backColor.rgb - frontColor.rgb;","    dir /= length(dir);","    vec4 vpos = frontColor;","    vec3 Step = dir/uSteps;","    vec4 accum = vec4(0, 0, 0, 0);","    vec4 sample = vec4(0.0, 0.0, 0.0, 0.0);","    vec4 colorValue = vec4(0, 0, 0, 0);","    float biggest_gray_value = 0.0;","    float opacityFactor = uOpacityVal;","    float lightFactor = uColorVal;","    // const 4095 - just example of big number","    // It because expression i > uSteps impossible","    for(float i = 0.0; i < 4095.0; i+=1.0)","    {","    // It because expression i > uSteps impossible","        if(i == uSteps) {","            break;","        }","        float gray_val = getVolumeValue(vpos.xyz);","        if(gray_val < uMinGrayVal || gray_val > uMaxGrayVal) {","            colorValue = vec4(0.0);","        } else {","            if(biggest_gray_value < gray_val) {","               biggest_gray_value = gray_val;","            }","            if(uAbsorptionModeIndex == 0.0)","        {","            vec2 tf_pos;","            tf_pos.x = (gray_val - uMinGrayVal) / (uMaxGrayVal - uMinGrayVal);","            tf_pos.y = 0.5;","            colorValue = texture2D(uTransferFunction,tf_pos); ","            //colorValue = vec4(tf_pos.x, tf_pos.x, tf_pos.x, 1.0);","            sample.a = colorValue.a * opacityFactor;","            sample.rgb = colorValue.rgb * uColorVal;","            accum += sample;","            if(accum.a>=1.0)","               break;","        }","        if(uAbsorptionModeIndex == 1.0)","        {","            vec2 tf_pos;","            tf_pos.x = (gray_val - uMinGrayVal) / (uMaxGrayVal - uMinGrayVal);","            tf_pos.y = 0.5;","            colorValue = texture2D(uTransferFunction,tf_pos); ","            //colorValue = vec4(tf_pos.x, tf_pos.x, tf_pos.x, 1.0);","            sample.a = colorValue.a * opacityFactor * (1.0 / uSteps);","            sample.rgb = (1.0 - accum.a) * colorValue.rgb * sample.a * lightFactor;","            accum += sample;","            if(accum.a>=1.0)","               break;","        }","        if(uAbsorptionModeIndex == 2.0)","        {","            vec2 tf_pos;","            tf_pos.x = (biggest_gray_value - uMinGrayVal) / (uMaxGrayVal - uMinGrayVal);","            tf_pos.y = 0.5;","            colorValue = texture2D(uTransferFunction,tf_pos); ","            //colorValue = vec4(tf_pos.x, tf_pos.x, tf_pos.x, 1.0);","            sample.a = colorValue.a * opacityFactor;","            sample.rgb = colorValue.rgb * uColorVal;","            accum = sample;","        }","        }","        //advance the current position","        vpos.xyz += Step;","        //break if the position is greater than <1, 1, 1>","        if(vpos.x > 1.0 || vpos.y > 1.0 || vpos.z > 1.0 || vpos.x < 0.0 || vpos.y < 0.0 || vpos.z < 0.0)","        {","            break;","        }","    }","    gl_FragColor = accum;","}"].join("\n"),me.Constructor=function(O){},me.Constructor(O),me};namespace.Shaders=Shaders}(window.VRC),function(namespace){var Core=function(domContainerId){var me={};return me._steps=20,me._slices_gap=[0,"*"],me._slicemap_row_col=[16,16],me._gray_value=[0,1],me._slicemaps_images=[],me._slicemaps_textures=[],me._opacity_factor=1,me._color_factor=1,me._absorption_mode_index=0,me._render_resolution=["*","*"],me._render_clear_color="#ffffff",me._transfer_function=[],me._geometry_dimension={xmin:0,xmax:1,ymin:0,ymax:1,zmin:0,zmax:1},me._transfer_function_colors=[{pos:.25,color:"#ff0000"},{pos:.5,color:"#00ff00"},{pos:.75,color:"#0000ff"}],me._firtsPassMaterial={},me._secondPassMaterial={},me._dom_container_id=void 0!=domContainerId?domContainerId:"container",me._dom_container={},me._renderer={},me._camera={},me._camera_settings={rotation:{x:0,y:0,z:0},position:{x:0,y:0,z:2}},me._rtTexture={},me._geometry={},me._geometry_settings={rotation:{x:0,y:0,z:0},position:{x:-.5,y:-.5,z:-.5}},me._materialFirstPass={},me._materialSecondPass={},me._sceneFirstPass={},me._sceneSecondPass={},me._meshFirstPass={},me._meshSecondPass={},me.onPreDraw=new VRC.EventDispatcher,me.onPostDraw=new VRC.EventDispatcher,me.onResize=new VRC.EventDispatcher,me.onCameraChange=new VRC.EventDispatcher,me.onCameraChangeStart=new VRC.EventDispatcher,me.onCameraChangeEnd=new VRC.EventDispatcher,me._onWindowResizeFuncIndex=-1,me._shaders=new VRC.Shaders,me.init=function(){me._container=me.getDOMContainer(),me._renderer=new THREE.WebGLRenderer,me._renderer.setSize(me.getResolution()[0],me.getResolution()[1]),me._renderer.setClearColor(me._render_clear_color),me._container.appendChild(me._renderer.domElement),me._camera=new THREE.PerspectiveCamera(45,me.getResolution()[0]/me.getResolution()[1],.01,11),me._camera.position.x=me._camera_settings.position.x,me._camera.position.y=me._camera_settings.position.y,me._camera.position.z=me._camera_settings.position.z,me._camera.rotation.x=me._camera_settings.rotation.x,me._camera.rotation.y=me._camera_settings.rotation.y,me._camera.rotation.z=me._camera_settings.rotation.z,me._controls=new THREE.OrbitControls(me._camera,me._renderer.domElement),me._controls.center.set(0,0,0),me._rtTexture=new THREE.WebGLRenderTarget(me.getResolution()[0],me.getResolution()[1],{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat}),me._rtTexture.wrapS=me._rtTexture.wrapT=THREE.ClampToEdgeWrapping,me._materialFirstPass=new THREE.ShaderMaterial({vertexShader:me._shaders.firtsPass_vs,fragmentShader:me._shaders.firtsPass_fs,attributes:{vertColor:{type:"c",value:[]}},side:THREE.FrontSide,transparent:!0}),me._materialSecondPass=new THREE.ShaderMaterial({vertexShader:me._shaders.secondPass_vs,fragmentShader:me._shaders.secondPass_fs,attributes:{vertColor:{type:"c",value:[]}},uniforms:{uBackCoord:{type:"t",value:me._rtTexture},uSliceMaps:{type:"tv",value:me._slicemaps_textures},uTransferFunction:{type:"t",value:me._transfer_function},uSteps:{type:"f",value:me._steps},uNumberOfSlices:{type:"f",value:me.getSlicesGap()[1]},uSlicesOverX:{type:"f",value:me._slicemap_row_col[0]},uSlicesOverY:{type:"f",value:me._slicemap_row_col[1]},uOpacityVal:{type:"f",value:me._opacity_factor},uColorVal:{type:"f",value:me._color_factor},uAbsorptionModeIndex:{type:"f",value:me._absorption_mode_index},uMinGrayVal:{type:"f",value:me._gray_value[0]},uMaxGrayVal:{type:"f",value:me._gray_value[1]}},side:THREE.BackSide,transparent:!0}),me._sceneFirstPass=new THREE.Scene,me._sceneSecondPass=new THREE.Scene;var geometryHelper=new VRC.GeometryHelper;me._geometry=geometryHelper.createBoxGeometry(me.getGeometryDimension()),me._geometry.applyMatrix((new THREE.Matrix4).makeTranslation(me._geometry_settings.position.x,me._geometry_settings.position.y,me._geometry_settings.position.z)),me._geometry.applyMatrix((new THREE.Matrix4).makeRotationX(me._geometry_settings.rotation.x)),me._geometry.applyMatrix((new THREE.Matrix4).makeRotationY(me._geometry_settings.rotation.y)),me._geometry.applyMatrix((new THREE.Matrix4).makeRotationZ(me._geometry_settings.rotation.z)),me._geometry.doubleSided=!0,me._meshFirstPass=new THREE.Mesh(me._geometry,me._materialFirstPass),me._meshSecondPass=new THREE.Mesh(me._geometry,me._materialSecondPass),me._sceneFirstPass.add(me._meshFirstPass),me._sceneSecondPass.add(me._meshSecondPass),window.addEventListener("resize",function(){me.onResize.call()},!1),me._controls.addEventListener("change",function(){me.onCameraChange.call()}),me._controls.addEventListener("start",function(){me.onCameraChangeStart.call()}),me._controls.addEventListener("end",function(){me.onCameraChangeEnd.call()}),me._transfer_function=me.setTransferFunctionByColors(me._transfer_function_colors),me._onWindowResizeFuncIndex=me.onResize.add(function(){me.setResolution("*","*")},!0)},me._secondPassSetUniformValue=function(key,value){me._materialSecondPass.uniforms[key].value=value},me._setSlicemapsTextures=function(images){for(var textures=[],i=0;i<images.length;i++){var texture=new THREE.Texture(images[i]);texture.wrapS=texture.wrapT=THREE.ClampToEdgeWrapping,texture.magFilter=THREE.LinearFilter,texture.minFilter=THREE.LinearFilter,texture.flipY=!1,texture.needsUpdate=!0,textures.push(texture)}me._slicemaps_textures=textures},me.setTransferFunctionByImage=function(image){var transferTexture=new THREE.Texture(image);transferTexture.wrapS=transferTexture.wrapT=THREE.ClampToEdgeWrapping,transferTexture.flipY=!0,transferTexture.needsUpdate=!0,me._secondPassSetUniformValue("uTransferFunction",transferTexture)},me.setTransferFunctionByColors=function(colors){var canvas=document.createElement("canvas");canvas.width=512,canvas.height=2;for(var ctx=canvas.getContext("2d"),grd=ctx.createLinearGradient(0,0,canvas.width-1,canvas.height-1),i=0;i<colors.length;i++)grd.addColorStop(colors[i].pos,colors[i].color);ctx.fillStyle=grd,ctx.fillRect(0,0,canvas.width,canvas.height);var img=document.getElementById("transferFunctionImg");img.src=canvas.toDataURL(),img.style.width="20 px",img.style.height="512 px";me.setTransferFunctionByImage(canvas)},me._setGeometry=function(geometryDimension){var geometry=(new GeometryHelper).createBoxGeometry(geometryDimension),colorArray=geometry.attributes.vertColor.array,positionArray=geometry.attributes.position.array;me._geometry.attributes.vertColor.array=colorArray,me._geometry.attributes.vertColor.needsUpdate=!0,me._geometry.attributes.position.array=positionArray,me._geometry.attributes.position.needsUpdate=!0,me._geometry.applyMatrix((new THREE.Matrix4).makeTranslation(me._geometry_settings.position.x,me._geometry_settings.position.y,me._geometry_settings.position.z)),me._geometry.applyMatrix((new THREE.Matrix4).makeRotationX(me._geometry_settings.rotation.x)),me._geometry.applyMatrix((new THREE.Matrix4).makeRotationY(me._geometry_settings.rotation.y)),me._geometry.applyMatrix((new THREE.Matrix4).makeRotationZ(me._geometry_settings.rotation.z)),me._geometry.doubleSided=!0},me.setSlicemapsImages=function(images){me._slicemaps_images=images,me._setSlicemapsTextures(images),me._secondPassSetUniformValue("uSliceMaps",me._slicemaps_textures),console.log("Core: setSlicemapsImages()")},me.setSteps=function(steps){me._steps=steps,me._secondPassSetUniformValue("uSteps",me._steps),console.log("Core: setSteps()")},me.setSlicesGap=function(from,to){me._slices_gap=[from,to],me._secondPassSetUniformValue("uNumberOfSlices",me.getSlicesGap()[1]),console.log("Core: setSlicesGap()")},me.setOpacityFactor=function(opacity_factor){me._opacity_factor=opacity_factor,me._secondPassSetUniformValue("uOpacityVal",me._opacity_factor),console.log("Core: setOpacityFactor()")},me.setColorFactor=function(color_factor){me._color_factor=color_factor,me._secondPassSetUniformValue("uColorVal",me._color_factor),console.log("Core: setColorFactor()")},me.setAbsorptionMode=function(mode_index){me._absorption_mode_index=mode_index,me._secondPassSetUniformValue("uAbsorptionModeIndex",me._absorption_mode_index),console.log("Core: setAbsorptionMode()")},me.setGeometryDimension=function(key,value){me._geometry_dimension[key]=value,me._setGeometry(me._geometry_dimension),console.log("Core: setGeometryMaxZ()")},me.setResolution=function(width,height){me._render_resolution=[width,height],"*"==me._render_resolution[0]||"*"==me._render_resolution[1]?me.onResize.start(me._onWindowResizeFuncIndex):me.onResize.stop(me._onWindowResizeFuncIndex);var width=me.getResolution()[0],height=me.getResolution()[1];me._camera.aspect=width/height,me._camera.updateProjectionMatrix(),me._renderer.setSize(width,height),console.log("Core: setResolution()")},me.setBackgoundColor=function(color){me._render_clear_color=color,me._renderer.setClearColor(color),console.log("Core: setBackgoundColor()")},me.setRowCol=function(row,col){me._slicemap_row_col=[row,col],me._secondPassSetUniformValue("uSlicesOverX",me._slicemap_row_col[0]),me._secondPassSetUniformValue("uSlicesOverY",me._slicemap_row_col[1]),console.log("Core: setRowCol()")},me.setGrayMinValue=function(value){me._gray_value[0]=value,me._secondPassSetUniformValue("uMinGrayVal",me._gray_value[0]),console.log("Core: setMinGrayValue()")},me.setGrayMaxValue=function(value){me._gray_value[1]=value,me._secondPassSetUniformValue("uMaxGrayVal",me._gray_value[1]),console.log("Core: setMaxGrayValue()")},me.draw=function(fps){me.onPreDraw.call(fps.toFixed(3)),me._renderer.render(me._sceneFirstPass,me._camera,me._rtTexture,!0),me._renderer.render(me._sceneSecondPass,me._camera),me.onPostDraw.call(fps.toFixed(3))},me.getDOMContainer=function(){return document.getElementById(me._dom_container_id)},me.getSteps=function(){return me._steps},me.getSlicemapsImages=function(){return me._slicemaps_images},me.getRowCol=function(){return me._slicemap_row_col},me.getSlicesGap=function(){var from=me._slices_gap[0],to=me._slices_gap[1];return"*"==me._slices_gap[1]&&(to=me.getRowCol()[0]*me.getRowCol()[1]*me.getSlicemapsImages().length),[from,to]},me.getResolution=function(){var width=me._render_resolution[0],height=me._render_resolution[1];return"*"==me._render_resolution[0]&&(width=window.outerWidth),"*"==me._render_resolution[1]&&(height=window.outerHeight),[width,height]},me.getGeometryDimension=function(){return me._geometry_dimension},me.getGrayMinValue=function(){return me._gray_value[0]},me.getGrayMaxValue=function(){return me._gray_value[1]},me.getClearColor=function(){return me._render_clear_color},me.getTransferFunctionColors=function(){return me._transfer_function_colors},me.getOpacityFactor=function(){return me._opacity_factor},me.getColorFactor=function(){return me._color_factor},me.getAbsorptionMode=function(){return me._absorption_mode_index},me.getClearColor=function(){return me._render_clear_color},me.getDomContainerId=function(){return me._dom_container_id},me};namespace.Core=Core}(window.VRC),function(namespace){var VolumeRaycaster=function(config){var me={};return me._needRedraw=!0,me._isStart=!1,me._clock=new THREE.Clock,me._core=new VRC.Core(config.dom_container_id),me._adaptationManager=new VRC.AdaptationManager,me.init=function(){function animate(){if(requestAnimationFrame(animate),me._needRedraw&&me._isStart){var delta=me._clock.getDelta(),fps=1/delta;me._core.draw(fps),me._needRedraw=!1}}me._core.init(),me._adaptationManager.init(me._core),me.addOnCameraChangeCallback(function(){me._needRedraw=!0}),animate()},me.setSlicemapsImages=function(images){var ctx=me._core._renderer.getContext(),maxTexSize=ctx.getParameter(ctx.MAX_TEXTURE_SIZE),firstImage=images[0];if(Math.max(firstImage.width,firstImage.height)>maxTexSize)throw Error("Size of slice bigger than maximum possible on current GPU. Maximum size of texture: "+maxTexSize);me._core.setSlicemapsImages(images),me._needRedraw=!0},me.uploadSlicemapsImages=function(imagesPaths,userOnLoadImage,userOnLoadImages,userOnError){var downloadImages=function(imagesPaths,onLoadImage,onLoadImages,onError){var downloadedImages=[],downloadedImagesNumber=0;try{for(var imageIndex=0;imageIndex<imagesPaths.length;imageIndex++){var image=new Image;!function(image,imageIndex){image.onload=function(){downloadedImages[imageIndex]=image,downloadedImagesNumber++,onLoadImage(image),downloadedImagesNumber==imagesPaths.length&&onLoadImages(downloadedImages)},image.onerror=onError,image.src=imagesPaths[imageIndex]}(image,imageIndex)}}catch(e){onError(e)}};downloadImages(imagesPaths,function(image){void 0!=userOnLoadImage&&userOnLoadImage(image)},function(images){me.setSlicemapsImages(images),void 0!=userOnLoadImages&&userOnLoadImages(images)},function(error){void 0!=userOnError?userOnError(error):console.error(error)})},me.start=function(){me._isStart=!0},me.stop=function(){me._isStart=!1},me.setSteps=function(steps_number){me._core.setSteps(steps_number),me._needRedraw=!0},me.setAutoStepsOn=function(flag){me._adaptationManager.run(flag),me._needRedraw=!0},me.setSlicesGap=function(from,to){me._core.setSlicesGap(from,to),me._needRedraw=!0},me.setOpacityFactor=function(opacity_factor){me._core.setOpacityFactor(opacity_factor),me._needRedraw=!0},me.setColorFactor=function(color_factor){me._core.setColorFactor(color_factor),me._needRedraw=!0},me.setAbsorptionMode=function(mode_index){me._core.setAbsorptionMode(mode_index),me._needRedraw=!0},me.setGeometryMinX=function(value){if(value>1||0>value)throw Error("Geometry size  should be in range [0.0 - 1.0] !");if(value>me._core.getGeometryDimension().xmax)throw Error("Min X should be lower than max X!");me._core.setGeometryDimension("xmin",value),me._needRedraw=!0},me.setGeometryMaxX=function(value){if(value>1||0>value)throw Error("Geometry size  should be in range [0.0 - 1.0] !");if(value<me._core.getGeometryDimension().xmin)throw Error("Max X should be bigger than min X!");me._core.setGeometryDimension("xmax",value),me._needRedraw=!0},me.setGeometryMinY=function(value){if(value>1||0>value)throw Error("Geometry size  should be in range [0.0 - 1.0] !");if(value>me._core.getGeometryDimension().ymax)throw Error("Min Y should be lower than max Y!");me._core.setGeometryDimension("ymin",value),me._needRedraw=!0},me.setGeometryMaxY=function(value){if(value>1||0>value)throw Error("Geometry size  should be in range [0.0 - 1.0] !");if(value<me._core.getGeometryDimension().ymin)throw Error("Max Y should be bigger than min Y!");me._core.setGeometryDimension("ymax",value),me._needRedraw=!0},me.setGeometryMinZ=function(value){if(value>1||0>value)throw Error("Geometry size  should be in range [0.0 - 1.0] !");if(value>me._core.getGeometryDimension().zmax)throw Error("Min Z should be lower than max Z!");me._core.setGeometryDimension("zmin",value),me._needRedraw=!0},me.setGeometryMaxZ=function(value){if(value>1||0>value)throw Error("Geometry size  should be in range [0.0 - 1.0] !");if(value<me._core.getGeometryDimension().zmin)throw Error("Max Z should be bigger than min Z!");me._core.setGeometryDimension("zmax",value),me._needRedraw=!0},me.setResolution=function(width,height){var ctx=me._core._renderer.getContext(),maxRenderbufferSize=ctx.getParameter(ctx.MAX_RENDERBUFFER_SIZE);Math.max(width,height)>maxRenderbufferSize?(console.warn("Size of canvas setted in "+maxRenderbufferSize+"x"+maxRenderbufferSize+". Max render buffer size is "+maxRenderbufferSize+"."),me._core.setResolution(maxRenderbufferSize,maxRenderbufferSize)):me._core.setResolution(width,height),me._needRedraw=!0},me.setBackgoundColor=function(color){me._core.setBackgoundColor(color),me._needRedraw=!0},me.setRowCol=function(row,col){me._core.setRowCol(row,col),me._needRedraw=!0},me.setGrayMinValue=function(value){if(value>1||0>value)throw Error("Gray value should be in range [0.0 - 1.0] !");if(value>me.getGrayMaxValue())throw Error("Gray min value should be lower than max value!");me._core.setGrayMinValue(value),me._needRedraw=!0},me.setGrayMaxValue=function(value){if(value>1||0>value)throw Error("Gray value should be in range [0.0 - 1.0] !");if(value<me.getGrayMinValue())throw Error("Gray max value should be bigger than min value!");me._core.setGrayMaxValue(value),me._needRedraw=!0},me.setTransferFunctionByColors=function(colors){me._core.setTransferFunctionByColors(colors),me._needRedraw=!0},me.setTransferFunctionByImage=function(image){me._core.setTransferFunctionByImage(image),me._needRedraw=!0},me.addOnResizeCallback=function(onResize){me._core.onResize.add(onResize),me._needRedraw=!0},me.addOnCameraChangeCallback=function(onChange){me._core.onCameraChange.add(onChange),me._needRedraw=!0},me.addOnCameraChangeStartCallback=function(onChangeStart){me._core.onCameraChangeStart.add(onChangeStart),me._needRedraw=!0},me.addOnCameraChangeEndCallback=function(onChangeEnd){me._core.onCameraChangeEnd.add(onChangeEnd),me._needRedraw=!0},me.addPreDraw=function(onPreDraw){me._core.onPreDraw.add(onPreDraw),me._needRedraw=!0},me.addOnDraw=function(onDraw){me._core.onDraw.add(onDraw),me._needRedraw=!0},me.getGrayMaxValue=function(){return me._core.getGrayMaxValue()},me.getGrayMinValue=function(){return me._core.getGrayMinValue()},me.getSteps=function(){return me._core.getSteps()},me.getSlicesGap=function(){return me._core.getSlicesGap()},me.getRowCol=function(){return me._core.getRowCol()},me.getGrayValue=function(){return[me._core.getGrayMinValue(),me._core.getGrayMaxValue()]},me.getGeometryDimension=function(){return me._core.getGeometryDimension()},me.getOpacityFactor=function(){return me._core.getOpacityFactor()},me.getColorFactor=function(){return me._core.getColorFactor()},me.getBackgound=function(){return me._core.getBackgound()},me.getAbsorptionMode=function(){return me._core.getAbsorptionMode()},me.getResolution=function(){return me._core.getResolution()},me.getAbsorptionMode=function(){return me._core.getAbsorptionMode()},me.getSlicemapsPaths=function(){return me._core.getSlicemapsPaths()},me.getDomContainerId=function(){return me._core.getDomContainerId()},me.getCameraSettings=function(){return me._core.getCameraSettings()},me.getGeometrySettings=function(){return me._core.getGeometrySettings()},me.getDomContainerId=function(){return me._core.getDomContainerId()},me.getClearColor=function(){return me._core.getClearColor()},me.getTransferFunctionColors=function(){return me._core.getTransferFunctionColors()},me.getDomContainerId=function(){return me._core.getDomContainerId()},me.draw=function(){me._core.draw()},me.setConfig=function(config){void 0!=config.gap_slices&&me._core.setSlicesGap(config.gap_slices[0],config.gap_slices[1]),void 0!=config.steps&&me._core.setSteps(config.steps),void 0!=config.row_col&&me._core.setRowCol(config.row_col[0],config.row_col[1]),void 0!=config.gray_min&&me._core.setGrayMinValue(config.gray_min),void 0!=config.gray_max&&me._core.setGrayMaxValue(config.gray_max),void 0!=config.x_min&&me._core.setGeometryDimension("xmin",config.x_min),void 0!=config.x_max&&me._core.setGeometryDimension("xmax",config.x_max),void 0!=config.y_min&&me._core.setGeometryDimension("ymin",config.y_min),void 0!=config.y_max&&me._core.setGeometryDimension("ymax",config.y_max),void 0!=config.z_min&&me._core.setGeometryDimension("zmin",config.z_min),void 0!=config.z_max&&me._core.setGeometryDimension("zmax",config.z_max),void 0!=config.opacity_factor&&me._core.setOpacityFactor(config.opacity_factor),void 0!=config.color_factor&&me._core.setColorFactor(config.color_factor),void 0!=config.backgound&&me._core.setBackgoundColor(config.backgound),void 0!=config.auto_steps&&me.setAutoStepsOn(config.auto_steps),
void 0!=config.absorption_mode&&me._core.setAbsorptionMode(config.absorption_mode),void 0!=config.resolution&&me.setResolution(config.resolution[0],config.resolution[1]),void 0!=config.slicemaps_images&&me.setSlicemapsImages(config.slicemaps_images),void 0!=config.slicemaps_paths&&me.uploadSlicemapsImages(config.slicemaps_paths,function(image){},function(images){me.start()}),me._needRedraw=!0},me.getConfig=function(){var config={steps:me.getSteps(),slices_gap:me.getSlicesGap(),slicemap_row_col:me.getRowCol(),gray_value:[me.getGrayMinValue(),me.getGrayMaxValue()],slicemaps_paths:[-1],opacity_factor:me.getOpacityFactor(),color_factor:me.getColorFactor(),absorption_mode_index:me.getAbsorptionMode(),render_resolution:me.getResolution(),render_clear_color:me.getClearColor(),transfer_function_as_array:[-1],transfer_function_path:[-1],transfer_function_colors:me.getTransferFunctionColors(),geometry_dimension:me.getGeometryDimension(),dom_container_id:me.getDomContainerId(),camera_settings:{rotation:{x:0,y:0,z:0},position:{x:0,y:0,z:2}},geometry_settings:{rotation:{x:0,y:0,z:0},position:{x:-.5,y:-.5,z:-.5}}};return config},me.init(),me.setConfig(config),me};namespace.VolumeRaycaster=VolumeRaycaster}(window.VRC);